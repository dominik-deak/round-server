datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    // previewFeatures = []
}

generator dbml {
    provider = "prisma-dbml-generator"
}

model User {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    email     String    @unique
    password  String
    firstname String?
    lastname  String?
    posts     Post[]
    role      Role
    accounts  Account[]
    stats     Stat[]
}

model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    published Boolean
    title     String
    content   String?
    author    User?    @relation(fields: [authorId], references: [id])
    authorId  String?
}

model Account {
    id           String        @id @default(cuid())
    userId       String
    user         User          @relation(fields: [userId], references: [id])
    name         String
    balance      Float
    transactions Transaction[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

model Transaction {
    id          String   @id @default(cuid())
    accountId   String
    account     Account  @relation(fields: [accountId], references: [id])
    amount      Float
    type        String // 'incoming' or 'outgoing'
    description String?
    date        DateTime @default(now())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Stat {
    id              String   @id @default(cuid())
    userId          String   @unique
    user            User     @relation(fields: [userId], references: [id])
    runway          Float
    monthlyOutgoing Float
    monthlyIncoming Float
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}

enum Role {
    ADMIN
    USER
}
